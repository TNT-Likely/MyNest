version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: mynest-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: mynest
      POSTGRES_USER: mynest
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mynest123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mynest"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mynest

  aria2:
    image: p3terx/aria2-pro
    container_name: mynest-aria2
    restart: unless-stopped
    environment:
      - RPC_SECRET=${ARIA2_SECRET:-mynest123}
      - LISTEN_PORT=6888
      - RPC_PORT=6800
      - UMASK_SET=022
      - PUID=1000
      - PGID=1000
    ports:
      - "6801:6800"  # 改为 6801 避免端口冲突
      - "6889:6888"  # 改为 6889 避免端口冲突
      - "6889:6888/udp"
    volumes:
      - ${DOWNLOAD_DIR:-./downloads}:/downloads
      - aria2_config:/config
    networks:
      - mynest

  mynest:
    image: ${DOCKER_USERNAME:-sunxiao0721}/mynest:${VERSION:-latest}
    container_name: mynest
    restart: unless-stopped
    ports:
      - "${PORT:-3001}:80"
    depends_on:
      postgres:
        condition: service_healthy
      aria2:
        condition: service_started
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: mynest
      DB_PASSWORD: ${POSTGRES_PASSWORD:-mynest123}
      DB_NAME: mynest
      ARIA2_RPC_URL: http://aria2:6800/jsonrpc
      ARIA2_RPC_SECRET: ${ARIA2_SECRET:-mynest123}
      ARIA2_DOWNLOAD_DIR: /downloads
    volumes:
      - ${DOWNLOAD_DIR:-./downloads}:/downloads
    networks:
      - mynest
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  aria2_config:
    driver: local

networks:
  mynest:
    driver: bridge